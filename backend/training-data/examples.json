[
  {
    "id": "tic-tac-toe-example",
    "userInput": "create a tic-tac-toe game",
    "projectType": "React Game",
    "technologies": [
      "React",
      "TypeScript",
      "CSS"
    ],
    "agentTasks": [
      {
        "id": "create-component",
        "type": "file_operation",
        "description": "Create TicTacToe component with game logic",
        "parameters": {
          "path": "src/components/TicTacToe.tsx",
          "content": "React component with useState for board state"
        },
        "expectedOutcome": "Functional tic-tac-toe component created",
        "dependencies": []
      },
      {
        "id": "create-styles",
        "type": "file_operation",
        "description": "Create CSS styles for game board",
        "parameters": {
          "path": "src/components/TicTacToe.css",
          "content": "Grid layout and hover effects"
        },
        "expectedOutcome": "Styled game board with visual feedback",
        "dependencies": [
          "create-component"
        ]
      },
      {
        "id": "update-app",
        "type": "file_operation",
        "description": "Update App.tsx to use TicTacToe component",
        "parameters": {
          "path": "src/App.tsx",
          "content": "Import and render TicTacToe component"
        },
        "expectedOutcome": "App displays the tic-tac-toe game",
        "dependencies": [
          "create-component",
          "create-styles"
        ]
      },
      {
        "id": "install-deps",
        "type": "dependency_management",
        "description": "Install required dependencies",
        "parameters": {
          "command": "npm install",
          "workingDirectory": "frontend"
        },
        "expectedOutcome": "Dependencies installed successfully",
        "dependencies": []
      },
      {
        "id": "build-project",
        "type": "command_execution",
        "description": "Build the project to verify everything works",
        "parameters": {
          "command": "npm run build",
          "workingDirectory": "frontend"
        },
        "expectedOutcome": "Project builds without errors",
        "dependencies": [
          "create-component",
          "create-styles",
          "update-app",
          "install-deps"
        ]
      }
    ],
    "successRate": 0.95,
    "createdAt": "2025-10-25T10:20:19.353Z",
    "updatedAt": "2025-10-25T10:20:19.353Z"
  },
  {
    "id": "todo-app-example",
    "userInput": "create a todo application",
    "projectType": "React App",
    "technologies": [
      "React",
      "TypeScript",
      "CSS",
      "Local Storage"
    ],
    "agentTasks": [
      {
        "id": "create-todo-component",
        "type": "file_operation",
        "description": "Create TodoApp component with state management",
        "parameters": {
          "path": "src/components/TodoApp.tsx",
          "content": "React component with todo list state and CRUD operations"
        },
        "expectedOutcome": "Functional todo app component created",
        "dependencies": []
      },
      {
        "id": "create-todo-item",
        "type": "file_operation",
        "description": "Create TodoItem component for individual todos",
        "parameters": {
          "path": "src/components/TodoItem.tsx",
          "content": "Component for displaying and editing individual todos"
        },
        "expectedOutcome": "Reusable todo item component created",
        "dependencies": []
      },
      {
        "id": "add-local-storage",
        "type": "file_operation",
        "description": "Add local storage persistence",
        "parameters": {
          "path": "src/hooks/useLocalStorage.ts",
          "content": "Custom hook for local storage management"
        },
        "expectedOutcome": "Todos persist between browser sessions",
        "dependencies": [
          "create-todo-component"
        ]
      },
      {
        "id": "style-todo-app",
        "type": "file_operation",
        "description": "Create styles for todo application",
        "parameters": {
          "path": "src/components/TodoApp.css",
          "content": "Modern CSS with animations and responsive design"
        },
        "expectedOutcome": "Beautiful and responsive todo app interface",
        "dependencies": [
          "create-todo-component",
          "create-todo-item"
        ]
      },
      {
        "id": "update-main-app",
        "type": "file_operation",
        "description": "Update App.tsx to use TodoApp",
        "parameters": {
          "path": "src/App.tsx",
          "content": "Import and render TodoApp component"
        },
        "expectedOutcome": "App displays the todo application",
        "dependencies": [
          "create-todo-component",
          "create-todo-item",
          "add-local-storage"
        ]
      }
    ],
    "successRate": 0.9,
    "createdAt": "2025-10-25T10:20:19.353Z",
    "updatedAt": "2025-10-25T10:20:19.353Z"
  },
  {
    "id": "calculator-example",
    "userInput": "create a calculator app",
    "projectType": "React App",
    "technologies": [
      "React",
      "TypeScript",
      "CSS"
    ],
    "agentTasks": [
      {
        "id": "create-calculator",
        "type": "file_operation",
        "description": "Create Calculator component with math operations",
        "parameters": {
          "path": "src/components/Calculator.tsx",
          "content": "Calculator with basic arithmetic operations and display"
        },
        "expectedOutcome": "Functional calculator component created",
        "dependencies": []
      },
      {
        "id": "add-keyboard-support",
        "type": "file_operation",
        "description": "Add keyboard input support",
        "parameters": {
          "path": "src/hooks/useKeyboard.ts",
          "content": "Custom hook for keyboard event handling"
        },
        "expectedOutcome": "Calculator responds to keyboard input",
        "dependencies": [
          "create-calculator"
        ]
      },
      {
        "id": "style-calculator",
        "type": "file_operation",
        "description": "Create calculator styles",
        "parameters": {
          "path": "src/components/Calculator.css",
          "content": "Calculator button grid and display styling"
        },
        "expectedOutcome": "Professional calculator appearance",
        "dependencies": [
          "create-calculator"
        ]
      },
      {
        "id": "add-history",
        "type": "file_operation",
        "description": "Add calculation history feature",
        "parameters": {
          "path": "src/components/HistoryPanel.tsx",
          "content": "Component to display calculation history"
        },
        "expectedOutcome": "Users can view calculation history",
        "dependencies": [
          "create-calculator"
        ]
      }
    ],
    "successRate": 1,
    "createdAt": "2025-10-25T10:20:19.353Z",
    "updatedAt": "2025-10-25T12:48:34.383Z"
  }
]